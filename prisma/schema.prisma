generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  quizzes       Quiz[]  
  attempts      QuizAttempt[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Quiz {
  id              String    @id @default(cuid())
  title           String
  description     String?
  duration        Int       
  scheduledFor    DateTime  
  marksPerQuestion Int
  questions       Json      
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  createdBy       User      @relation(fields: [userId], references: [id])
  userId          String
  attempts        QuizAttempt[]
}

model QuizAttempt {
  id          String    @id @default(cuid())
  quiz        Quiz      @relation(fields: [quizId], references: [id])
  quizId      String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  answers     Json      
  score       Float
  startedAt   DateTime  @default(now())
  submittedAt DateTime?

  @@unique([quizId, userId]) 
}